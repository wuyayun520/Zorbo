name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: MIIMgwIBAzCCDEoGCSqGSIb3DQEHAaCCDDsEggw3MIIMMzCCBs8GCSqGSIb3DQEHBqCCBsAwgga8AgEAMIIGtQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQIiPoN69kYGCkCAggAgIIGiKN6fyolaTScSnBEguHkPsoeHcsXnRfjkW1cc/1CkLwkPNgL77PBnXFqZv+0HCWuGt2oQ4adtgftt3LB7D99aIp9cwoyWKc+G/ILisWpIxLhaEhapcFPa2eySEcF/23b/UwWqDxP1nzfKr1g6PSqw93USnpiPO4SHq5YY5BowYsJYuC76p/j+U2W+XMfzxDNIV1JAvINKKLZC7ZdQLEEEcJBkQREAL2CHTOc70778R+q3EqmRz+lAevt1nESl2UqA7pprxljZAuz6sk4khIy6sH9v9P4cUDHoO9xIIdt+CUTztN94ycNZQ45PO9zmVKl1jg9RyPSk8dtt9ZLfRM9hGcICUY2Yqd7yMeRR+Z+jTjEgpx+CSbN169UJWs/e5XP8UMwgJmUOtRY8yhRirYlvwkReBT0p1caiHU20Qw/UvnHHN/M3PYFUv+kYWiAqBWidBynMvgXCRdPzlAd4nZkbVIjMpFZ+RtqspdV0XL+P9b9jWmiMVxyDNqKlTUZdB1Dn/smu0rcDj4I85HV9QLC8ArTy89F74KsudCoGKckQTynNvt1vhHbS3cumKzm3UgR5cAcKPOmOtvqyugVg4ZMCVxdz5sj2UGsLfMc28fbfALz4+WGZquzxjfQ2cucs8uOEEEVTwPA+Y5uN8r/4/3OEenFFY8NjzslwJHDtPe5xpNFvEV4I4IDlfR73ZBsQrkun35EPDiqOnAGKQ4n/7qFKYTiW1+cqC/BwcV7W2z2qoENvTlSTp98gXbSTsoXBNjTjBivMj8Z0QFXzh3fOs1nWj1ExcVm7S63BbM2v5jPWOQse1XO38E2585R5ETJxiQbPreE9P3BJpeFGr69q/x5ajBgoU8IyGc1iLfWbhPjS0rv9ErYX/4G8kQcWyBKNQ8J0HCS+Aj8fYGh+krk6p/PEZfEUi9rXvVxzVVziIEZLv256/df81j9K4Wt92zlj+PlA46spamcmQbYQaGOes0ExQ/N88X+r0qPplZXzoWAHA/mpy7kyx3BvhfpTgMDZEZow2MEJaCcTdQR8Kqv2TOq3SOJNYdpEJ/iWvJPrGcN7agF16bQ0Bmp9pO2bxpMbzTAxMwOeYWylcmgTk+VA0wwwpL4MKispFgG7C7ciXcpkIbCjbyaxdluAbQny8HFWqLxMPEyHrNzlooKNw1fdRoymm/h5uOoo3Df3P7Z/aLWbf0RZsVlI9hxHMThawk6zg90hQBpdwIR/zkJcg1x3bxek9Om5Kxko0tGPh6ZmuHjkKjoDI+/f3wOjQTCTtZb7JpBWv11X4orLy14+7hbI4IW955xPJPh85OFnKFS0M8O5lJfXqWF9l1S2s8iBdxm4UHxuLlduvjcAQlH42iRRLDQo/2761moH3CdyU9G2AJslq5ESEplDpp3y5VAkK6SklQvVP/sxGZ0JFu+XJsw4U94WQdNGxyIKjOJ0JCSKnw1VE1MBKzxVdqbMQ5R7qxayKJ3G0biHMSFFKQXjKhx5cf7HH+beHWD/RWw2K7c4I2zt89HuinzaWkcC3pZN+wQaYApRDljKT02BqjeK0lSwS24x9LQ3R2301hf9Ax6/xI0p1+sR7GgnGzqOcHM3UypyEuJ0pzD8UhS7qnI+VT9XUTtuLZipuH7xUsrAYfURpYydTnorh4qhCdUmA5YGYPjATnKS/UGzQRNO2gEU2okCvAxDUMr8ghcKY1L8ygEnsrWOudEUr7JIyjVRinK+8q/wOQcW8Y9Fg1eUovsY9/kF6LilS7t4tIjPICRfJaKEC3XjiAkNEtdV3RGkod4gvZrZBcX5dOPGQu5XRJW4F7iP52j05mcAqrmRFgXaMLJCwklMqxiEBM6QhhQuWkVJui+wQzntK1pwqr+MzqxDIvYZTbNdQXleBrktCNoLjudgJUosih4CqDfI/YL2QWjxqxLJ+loH83bGxUMUynVfT+yrxVnHT5Vn3TqO4E0jKmxVv3tNUEPJ/kdzGtocDLAeaenjllr1Lt/2CwEZ8EJs1NS0PgiWd5vTONLkONd1JTH9w3JTCe+BZ6oEY5qtxVhDrdsyBaDANKR1rueiwV+7fAHsvaSLcunbtbGtX/+71MCYuDtslV1mU++iz6sskc4VZfI4qQLRbIo5I9q7Hjvw50ND7CJivVcex0d4B4wJOVdxvZ37dhDEcqpRauHVlFqQRk6FXROUsFz547TdL72udkXlcPlgZJDTsjVDMKegI9JEDipesNV7W6gb62o8zwwggVcBgkqhkiG9w0BBwGgggVNBIIFSTCCBUUwggVBBgsqhkiG9w0BDAoBAqCCBO4wggTqMBwGCiqGSIb3DQEMAQMwDgQIwZlavwKDnk0CAggABIIEyFYQV1CIlHjBN9+t+rkDuepN8/Oo/Wn/dAmx2WNBEepMLQSur+g2c8Wfi5R+Ul1AKHjvB2+BiV95NwJfIvx/VmHdqvmyhbQQTwpxbJ3LIrXUpvzOoSSaH3l+mMRPGc0B2v0dJ2IuzkQ7rkYIYOapSmojFT8AhVv9Do6xH0NVB1Q54U0Wri8Lw2SvwhcZ3HX0ewEpcOQLOhnTldiT9BUDe12IFCRdA9yNv4R4y2kwMTqRZ1vu4XQA/ZAXSb9qLfjT/BG9AL/TDwHLPPLDj9ZMF7+NZeincXI+ssf2eEu318LaERefT3XJcMvVn5V5cZNzQUSFfn5uU+QnERoBMVPomnY6BKGGm3gW2O5e4CTBB0yk6ZPl/af45zinBJ01o8pQhHiLVyBYCSUbw8DMcBtgWzuV6GsFLsI0bu74H4S3vMFKJ5Uk6ic2pKT9n7D4fF/up1o8RZZlt9mXq4oRWoVu/gF2DodxVEQxxu8Fmxg72IADcqSPyTBybo0+dFI3+EG7okbHv3wF/qrMuaMq6FzIE4psi/lpwvRytkqNB8apQei1fuIr7NiU7Yspixhz0UqCrOFWOqGSBJFYsoX2oqLL/iy9LmCwbC6Ik7p2TrgVylRf+mr0iEmKFTJjIJW/Pa2dlArjCRXFg/2FTakQA1qIGkVDvRFaXmykqelg7XnxSPjVJ2OHZSTCvfGjulLoKTSspjocUxqeX3p88/q9vAgim0x0bDQcpqailLCSt0c1tYz2/fp4/XmypO6QswpDCl28M6ilqlJxfzqsEeKU89r44ZsLRqRfskzVNpIyWsLIBYEqDhB7Ty8/9e3GTomdyKWD+WJTtJwJnLR3RtQ7gk7RnI70ZKkqaxw9SpLqPqBtrJS5Om+RpOclk0c8GZ2av1/gurrosLA1RFwn6PU3kTJOiEzUK3Q696LEwObhT3c6xEfaPQUBkF+hUQuH+TmTW2CcRaplzGAe0SECMGObIh8jCfniG1+mL2QaGUmsrcmua5bZZ5M1h3Mma0sMAyazueJQGy9zSrP12Ua86un19VJXAyKMFlZGxbaeVVNRo4SKhREJ5+TW7Y7OAluYfKj+sGEGItT/ATI87eCjTumcYk0hi9mVvOEGcNbxI6uGeifQI9eI7jIS45wdBLKzZFKTRE/rCyQLI7gdb0BSqMgXBWOgVFocxDK7AMCIv6AIr6g2iNPsuBoxn/ZrByE0sbcmi2T1+kiLKhfMeDqAUoYKisOS8S0vpN1rLXwFeTp1BlM1K21NNQeMgEvK3prLUfPvl6kULfZ1R5ocDBWDSH7wc+ge8+ZE5IDbWwSevGjzSI5WXAMaNLmdQ33Iw3kjSHb8R6vdI1pczisavYmC1+a564Og3Hv2MkWtzJe6IoKhSLDnrV9zxF2QS754wiq4zpTvsqiPh6/raConaS8cCBl4+Am8DeKD9lPcgcJndwUJjPhK6DDSYrbpd+/YlGYqeeSlhnACiFTLcdjg6yAebmfE6lo4yiE++nOVJ4N/QpBhx2s+nZJZLmoV2O09YMlNllEcDQF+IgCuKJhcE3sExv1BjO6swLFDWyLfWP0DFV8rAvrSCyxVOX7QHDD9KPCqc2JkwK1vXZft1qSVAKa3iN0jD2ajE6bRTrMWIQeR7DFAMBkGCSqGSIb3DQEJFDEMHgoAYQBkAG0AaQBuMCMGCSqGSIb3DQEJFTEWBBR811ypHBIFEN9uhnFH5S8zpksFmzAwMCEwCQYFKw4DAhoFAAQUTiYmxzFv//XwwhrsVmVcEwiUxQAECH4dKpSKePSFAgEB


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/zorbo.ipa"
          APPLE_ID: "wangqiuju@hkyinggetra.shop"
          APP_SPECIFIC_PASSWORD: "akqp-zvdb-czcn-xbrb"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
